########################################################################
########################################################################
###########  HOMEWORK 1 - ECON 4120-01 - Spring Quarter 2019 ###########
########################################################################
###########  HOMEWORK 1 - ECON 4120-01 - Spring Quarter 2019 ###########
###########             Instructor: Karo Solat               ###########
########################################################################
###########  HOMEWORK 1 - ECON 4120-01 - Spring Quarter 2019 ###########
###########             Instructor: Karo Solat               ###########
########################################################################
########################################################################
###########  HOMEWORK 1 - ECON 4120-01 - Spring Quarter 2019 ###########
###########             Instructor: Karo Solat               ###########
########################################################################
#### Write your answers in this file and submit it through Canvas. #####
########################################################################
###########  HOMEWORK 1 - ECON 4120-01 - Spring Quarter 2019 ###########
###########             Instructor: Karo Solat               ###########
########################################################################
#### Write your answers in this file and submit it through Canvas. #####
########################################################################
########################################################################
###########  HOMEWORK 1 - ECON 4120-01 - Spring Quarter 2019 ###########
###########             Instructor: Karo Solat               ###########
########################################################################
#### Write your answers in this file and submit it through Canvas. #####
########################################################################
# 1. Load "fpp2" and "GGally".
rm(list = ls(all=T))
if(is.null(sessionInfo()$otherPkgs) == FALSE)lapply(paste("package:", names(sessionInfo()$otherPkgs), sep=""), detach, character.only = TRUE, unload = TRUE)
library(fpp2)
library(GGally)
mydata <- departures
View(mydata)
mydata <- departures$resshort
library(fpp2)
library(GGally)
departures$resshort
my <- departures
View(my)
mydata  <- my$resshort
rm(list = ls(all=T))
if(is.null(sessionInfo()$otherPkgs) == FALSE)lapply(paste("package:", names(sessionInfo()$otherPkgs), sep=""), detach, character.only = TRUE, unload = TRUE)
library(fpp2)
library(GGally)
my <- departures
mydata  <- my$resshort
q()
rm(list = ls(all=T))
if(is.null(sessionInfo()$otherPkgs) == FALSE)lapply(paste("package:", names(sessionInfo()$otherPkgs), sep=""), detach, character.only = TRUE, unload = TRUE)
library(tidyverse)
library(lubridate)
library(kableExtra)
library(htmlTable)
library(formattable)
library(GGally)
library(janitor)
library(psych)
library(ggplot2)
library(gridExtra)
library(devtools)
library(knitr)
library(fpp2)
fancy
autoplot(fancy)
myda <- fancy
lambda <- BoxCox.lambda(myda)
myda <- BoxCox(myda, lambda = lambda)
autoplot(myda)
colnames(fancy)
fancy
autoplot(fancy)
Mod1 <- tslm(myda ~ trend + season)
summary(Mod1)
autoplot(myda, series="Data") + autolayer(fitted(Mod1), series="Fitted")
Mods <- tslm(myda ~ trend + season)
summary(Mods)
Mod1 <- tslm(myda~time)
Mod1 <- tslm(myda ~ Time)
Mod1 <- tslm(myda ~ Time, data = myda)
Mod1 <- tslm(sales ~ Time, data = myda)
Mod1 <- tslm(sales ~ time, data = myda)
Mod1 <- tslm(myda ~ trend, data = myda)
summary(Mod1)
autoplot(myda, series="Data") + autolayer(fitted(Mod1), series="Fitted")
head(fancy, 50)
ggseasonplot(fancy)
Month <- time(fancy)
Surf <- c()
Mon <- round(12*(Month[i] - floor(Month[i])))+1
Month <- time(fancy)
Surf <- c()
for(i in 1:length(Month)){
Mon <- round(12*(Month[i] - floor(Month[i])))+1
yr <- floor(Month[i])
if(yr >= 1988 & Mon == 3){
Surf[i] <- 1}
else{ Surf[i] <- 0}}
Mods <- tslm(myda ~ trend + season + Surf
summary(Mods)
Mods <- tslm(myda ~ trend + season + Surf)
summary(Mods)
autoplot(myda, series="Data") + autolayer(fitted(Mods), series="Fitted")
autoplot(myda, series="Data") + autolayer(fitted(Mods), series="lm")
autoplot(Mods$residuals)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
Time <- time(fancy)
surfing_festival <- c()
for(i in 1:length(Time)){
month <- round(12*(Time[i] - floor(Time[i]))) + 1
year <- floor(Time[i])
if(year >= 1988 & month == 3){
surfing_festival[i] <- 1
} else {
surfing_festival[i] <- 0
}
}
tslm_log_fancy <- tslm(
BoxCox(fancy, 0) ~ trend + season + surfing_festival
)
autoplot(tslm_log_fancy$residuals)
autoplot(Mods$residuals)
Month <- time(fancy)
Surf <- c()
for(i in 1:length(Month)){
Mon <- round(12*(Month[i] - floor(Month[i])))+1
yr <- floor(Month[i])
if(yr >= 1988 & Mon == 3){
Surf[i] <- 1}
else{ Surf[i] <- 0}}
Mods <- tslm(myda ~ trend + season + Surf)
summary(Mods)
autoplot(myda, series="Data") + autolayer(fitted(Mods), series="fitted")
autoplot(Mods$residuals)
ggAcf(Mods)
#   What do the values of the coefficients tell you about each variable?
Summary(Mods)
#   What do the values of the coefficients tell you about each variable?
summary(Mods)
#Forcast done using transformed data
forecast(myda)
forecast(myda, h=36)
for.myda <- forecast(myda, h=36)
autoplot(myda)+ autolayer(for.myda, series = "Predicted", PI = T)
forecast(fancy, h=36)
for.fancy <- forecast(fancy , h=36)
autoplot(fancy)+autolayer(for.fancy, series = "Predicted", PI = T)
for.myda$upper
for.myda$lower
piu <- for.myda$upper
pil <- for.myda$lower
autoplot(myda)+ autolayer(for.myda, series = "Predicted", PI = F)+autolayer(piu)+
autolayer(pil)
piu2 <- for.fancy$upper
pil2 <- for.fancy$lower
autoplot(myda)+ autolayer(for.fancy, series = "Predicted", PI = F)+autolayer(piu2)+
autolayer(pil2)
gasoline
summary(gasoline)
str(gasoline)
head(gasline, 10)
head(gasoline, 10)
fourier1 <- tslm(gasoline ~ trend + fourier(gasoline, K = 2))
autoplot(gasoline)
autoplot(gasoline) + autolayer(fourier1, series = "Predictor 1", PI = F)
autoplot(gasoline) + autolayer(fitted(fourier1, series = "Predictor 1", PI = F))
autoplot(gasoline) + autolayer(fitted(fourier1) series = "Predictor 1", PI = F)
autoplot(gasoline) + autolayer(fitted(fourier1), series = "Predictor 1", PI = F)
fourierK1 <- tslm(gasoline ~ trend + fourier(gasoline, K = 1))
autoplot(gasoline) + autolayer(fitted(fourierK1), series = "Predictor 1", PI = F)
fourierK2 <- tslm(gasoline ~ trend + fourier(gasoline, K = 2))
autoplot(gasoline) + autolayer(fitted(fourierK2), series = "Predictor 1", PI = F)
fourierK5 <- tslm(gasoline ~ trend + fourier(gasoline, K = 5))
autoplot(gasoline) + autolayer(fitted(fourierK5), series = "Predictor 1", PI = F)
fourierK.1 <- tslm(gasoline ~ trend + fourier(gasoline, K = .1 )
autoplot(gasoline) + autolayer(fitted(fourierK.1), series = "Predictor 1", PI = F)
fourierK.1 <- tslm(gasoline ~ trend + fourier(gasoline, K = 1/10 )
autoplot(gasoline) + autolayer(fitted(fourierK.1), series = "Predictor 1", PI = F)
fourierK.1 <- tslm(gasoline ~ trend + fourier(gasoline, K = (1/10) )
autoplot(gasoline) + autolayer(fitted(fourierK.1), series = "Predictor 1", PI = F)
fourierK10 <- tslm(gasoline ~ trend + fourier(gasoline, K = 10 )
autoplot(gasoline) + autolayer(fitted(fourierK10), series = "Predictor 1", PI = F)
fourierK10 <- tslm(gasoline ~ trend + fourier(gasoline, K = 10))
autoplot(gasoline) + autolayer(fitted(fourierK10), series = "Predictor 1", PI = F)
myda <- window(gasoline, end = 2004)
myda2 <- window(gasoline, end = 2004)
head(myda2, 10)
myda2 <- window(gasoline, end = 2004)
head(myda2)
str(gasoline)
str(myda2)
summary(fourierk10)
fourierK10 <- tslm(myda2 ~ trend + fourier(myda2, K = 10))
summary(fourierk10)
summary(fourierK10)
fourierK10%>%
CV()
fourierK20 <- tslm(myda2 ~ trend + fourier(myda2, K = 20))
fourierK20%>%
CV()
fourierK2%>%
CV()
fourier30 <- tslm(myda2 ~ trend + fourier(myda2, K = 10))
fourierK30%>%
CV()
fourierK30 <- tslm(myda2 ~ trend + fourier(myda2, K = 10))
fourierK30%>%
CV()
fourierK30 <- tslm(myda2 ~ trend + fourier(myda2, K = 30))
fourierK30%>%
CV()
fourierK30 <- tslm(myda2 ~ trend + fourier(myda2, K = 30))
fourierK30 <- tslm(myda2 ~ trend + fourier(myda2, K = 28))
fourierK30%>%
CV()
fourierK30 <- tslm(myda2 ~ trend + fourier(myda2, K = 28))
fourierK30 <- tslm(myda2 ~ trend + fourier(myda2, K = 26))
fourierK30 <- tslm(myda2 ~ trend + fourier(myda2, K = 27))
fourierK26 <- tslm(myda2 ~ trend + fourier(myda2, K = 26))
#R only allowed me to go up to K = 26
fourierK26%>%
CV()
fourierK20 <- tslm(myda2 ~ trend + fourier(myda2, K = 20))
fourierK20%>%
CV()
# CV - .007 AICc - 173
fourierK26 <- tslm(myda2 ~ trend + fourier(myda2, K = 26))
#R only allowed me to go up to K = 26
fourierK26%>%
CV()
checkresiduals(fourier26)
checkresiduals(fourierK26)
checkresiduals(fc)
fc <- snaive(a10)
autoplot(fc)
checkresiduals(fc)
fourierK10 <- tslm(myda2 ~ trend + fourier(myda2, K = 10))
fourierK10%>%
fourierK10 <- tslm(myda2 ~ trend + fourier(myda2, K = 10))
fourierK10%>%
CV()
fourierK7 <- tslm(myda2 ~ trend + fourier(myda2, K = 7))
fourierK7%>%
CV()
checkresiduals(fourierK26)
fourierK5 <- tslm(myda2 ~ trend + fourier(myda2, K = 5))
autoplot(myda2) + autolayer(fitted(fourierK5), series = "Predictor 1", PI = F)
checkresiduals(fourierK26)
fc <- forecast(tslm(myda2 ~ Time), newdata = data.frame(fourier(myda2, K = 26, h = 52)))
str(myda2)
head(myda2)
summary(myda2)
fc <- forecast(tslm(myda2 ~ Time, data = myda2), newdata = data.frame(fourier(myda2, K = 26, h = 52)))
fc <- forecast(tslm(myda2 ~ time, data = myda2), newdata = data.frame(fourier(myda2, K = 26, h = 52)))
fc <- forecast(tslm(myda2 ~ Time, data = myda2), newdata = data.frame(fourier(myda2, K = 26, h = 52)))
fc <- forecast(fourierK26, newdata = data.frame(fourier(myda2, K = 26, h = 52)))
fc
autoplot(myda2) + autolayer(fc, PI = F)
test_data <- windo(gasoline, start = 2004, end = 2005)
test_data <- window(gasoline, start = 2004, end = 2005)
autoplot(test_data) + autolayer(fc, PI + F)
autoplot(test_data) + autolayer(fc, PI = F)
autoplot(test_data) + autolayer(fc)
autoplot(test_data) + autolayer(fc, alpha = 1)
autoplot(test_data) + autolayer(fc, alpha = .1)
autoplot(test_data) + autolayer(fc, alpha = .4)
autoplot(test_data) + autolayer(fc, alpha = .4, legend = T)
autoplot(fourierK26)
fourierK2 <- tslm(myda2 ~ trend + fourier(myda2, K = 2))
autoplot(myda2) + autolayer(fitted(fourierK2), series = "Predictor 1", PI = F)
fc <- forecast(fourierK26, newdata = data.frame(fourier(myda2, K = 26, h = 52)))
fc
test_data <- window(gasoline, start = 2004, end = 2005)
autoplot(test_data) + autolayer(fc, alpha = .4, legend = T)
test_data <- window(gasoline, start = 2004, end = 2005)
autoplot(test_data) + autolayer(fc, alpha = .4, color = "red")
#   What do the values of the coefficients tell you about each variable?
summary(Mods)
checkresiduals(Mods)
testresiduals(Mods)
residuals.lm(Mods)
checkresiduals(Mods)
#Pre - saved package / enviroment scrub and load
rm(list = ls(all=T))
if(is.null(sessionInfo()$otherPkgs) == FALSE)lapply(paste("package:", names(sessionInfo()$otherPkgs), sep=""), detach, character.only = TRUE, unload = TRUE)
library(tidyverse)
library(lubridate)
library(kableExtra)
library(htmlTable)
library(formattable)
library(GGally)
library(janitor)
library(psych)
library(ggplot2)
library(gridExtra)
library(devtools)
library(knitr)
library(fpp2)
str(insurance)
myda <- insurance
summary(myda)
head(myda)
autoplot(myda)
Mod1 <- tslm(Quotes ~ TV.advert + Time, data = myda)
Mod1 <- tslm(Quotes ~ TV.advert, data = myda)
summary(Mod1)
autoplot(myda)+autolayer(fitted(Mod1))
autoplot(myda)+geom_jitter(x = Quotes, y=TV.advert)
myda%>%
autoplot(myda)+geom_jitter(x = Quotes, y=TV.advert)
myda%>%
autoplot(myda)+geom_jitter(aes(x = Quotes, y=TV.advert))
myda%>%
autoplot(myda)+geom_jitter(myda, aes(x = Quotes, y=TV.advert))
myda%>%
geom_jitter(myda, aes(x = Quotes, y=TV.advert))
myda%>%
geom_jitter(myda, aes(x = Quotes, y=TV.advert))
myda%>%
geom_jitter(myda, aes(x = Quotes, y=TV.advert))
ggplot(myda)+geom_jitter(myda, aes(x = Quotes, y=TV.advert))
ggplot(myda)+geom_jitter(myda, aes(x = Quotes, y=TV.advert))
qplot(myda[,:1])
autoplot(mens
autoplot(mens400)
autoplot(mens400)
time_men <- time(mens400)
time_men <- time(mens400)
tslm_men <- tslm(mens400~time_mens400, data = mens400)
time_men <- time(mens400)
tslm_men <- tslm(mens400~time_men, data = mens400)
autoplot(mens400)+
geom_abline(slope = tslm_men$coefficients[2],
intercept = tslm_men$coefficients[1],
colour="red")
summary(tslm_men)
tslm_men$coefficients[2]
checkresiduals(tslm_men)
forecast(tslm_men, h=12)
fc_mens400 <- forecast(
lm_mens400,
newdata = data.frame(time_mens400 = 2020)
)
fc_mens400 <- forecast(
tslm_men,
newdata = data.frame(time_men = 2020)
)
fc_mens400
time_men <- time(mens400)
tslm_men <- tslm(mens400~time_men, data = mens400)
autoplot(mens400)+
geom_abline(slope = tslm_men$coefficients[2],
intercept = tslm_men$coefficients[1],
colour="red")
tslm_men$coefficients[2]
checkresiduals(tslm_men)
fc_mens400 <- forecast(
tslm_men,
newdata = data.frame(time_men = 2020)
)
fc_mens400
autoplot(mens400)+
geom_abline(slope = tslm_men$coefficients[2],
intercept = tslm_men$coefficients[1],
colour="red")
qplot(time(mens400,mens400))
qplot(time(mens400,mens400))+
geom_smooth(method = "lm")
autoplot(mens400)+
geom_abline(slope = tslm_men$coefficients[2],
intercept = tslm_men$coefficients[1],
colour="red")
summary(tslm_men)
qplot(huron)
qplot(huron)+
geom_smooth(method = "lm")
qplot(time(huron), huron)+
geom_smooth(method = "lm")
time <- time(huron)
tslm(huron~trend)
Mod1 <- tslm(huron~trend)
autoplot(Mod1)
qplot(Mod1)
autoplot(stl(elecequip, s.window = 7,t.window = 11))
autoplot(stl(elecequip, s.window = 3,t.window = 7))
autoplot(stl(elecequip, s.window = 7,t.window = 11))
beer2 <- (ausbeer, start=1992)
beer2 <- window(ausbeer, start=1992)
ma4 <- ma(beer2, order = 4, centre = F)
ma2x4 <- ma(beer2, order = 4, centre = T)
ma4
autoplot(ma4)
autoplot(ma2x4)
autoplot(ma4)
grid.arrange(
autoplot(ma4)
autoplot(ma2x4)
)
grid.arrange(
autoplot(ma4)
autoplot(ma2x4))
grid.arrange(
autoplot(ma4)+
autoplot(ma2x4))
